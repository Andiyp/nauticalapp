rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isNotBlocked() {
      return isAuthenticated() &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isBlocked == false;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isNotBlocked();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isAdmin() || (isOwner(userId) && isNotBlocked());
      allow delete: if isAdmin();
    }

    // SOS requests
    match /sos_requests/{requestId} {
      allow read: if isAuthenticated() && isNotBlocked();
      allow create: if isAuthenticated() && isNotBlocked() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Alerts collection (admin announcements)
    match /alerts/{alertId} {
      allow read: if isAuthenticated() && isNotBlocked();
      allow write: if isAdmin();
    }
  }
}